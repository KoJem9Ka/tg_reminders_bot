import {
  Ctx, Hears, Help, Message, Start, Update,
} from 'nestjs-telegraf';
import { ru as chrono } from 'chrono-node';
import { TelegrafBotContext } from './core/telegraf-bot-context';
import { StartKeyboard } from './core/keyboards/start.keyboard';
import { PrismaService } from './prisma/prisma.service';

@Update()
export class AppUpdate {
  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
   * @param ctx –¢–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç.
   */
  @Start()
  @Hears(/^\/?(–Ω–∞—á–∞—Ç—å|–ø—Ä–∏–≤–µ—Ç|—Å—Ç–∞—Ä—Ç|—Ö–∞–π|—Ö–µ–ª–ª–æ|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|start|hi|hello)!*$/i)
  @Help()
  @Hears(/^\/?(–ø–æ–º–æ—â—å|–ø–æ–º–æ–≥–∏|help|–∫–æ–º–∞–Ω–¥—ã|commands)$/i)
  async start(@Ctx() ctx: TelegrafBotContext) {
    await ctx.reply(`
üëã –ü—Ä–∏–≤–µ—Ç!
üëæ –Ø –±–æ—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏.
‚ö° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥ —Å—Ç—Ä–æ–∫–æ–π –≤–≤–æ–¥–∞.
    `.trim(), StartKeyboard);
    await ctx.telegram.deleteMyCommands();
  }

  @Hears(/–¥–∞—Ç–∞ .+/i)
  async date(
    @Ctx() ctx: TelegrafBotContext,
    @Message() msg: { text: string },
  ) {
    await ctx.reply(`Date: ${chrono.parseDate(msg.text).toISOString()}`);
    // await ctx.replyWithHTML(`reminders: <code>${getJSON(reminders, 2)}</code>`);
  }
}
